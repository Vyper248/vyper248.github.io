type Group = {
    name: string;
    group: string;   
}

export const getGroups = (projects: Group[]) => {
    if (!projects) return {};

    return projects.reduce((a: {[key: string]: Group[]}, c) => {
        if (a[c.group] === undefined) a[c.group] = [];
        a[c.group].push(c);
        return a;
    }, {});
}

const points: {[key: string] : [number, number][]} = {
    a: [[1,1],[1,2],[1,3],[1,4],[1,5],[1,6],[1,7],[2,4],[2,7],[3,4],[3,7],[4,4],[4,7],[5,1],[5,2],[5,3],[5,4],[5,5],[5,6],[5,7]],
    b: [[1,1],[1,2],[1,3],[1,4],[1,5],[1,6],[1,7],[2,1],[2,4],[2,7],[3,1],[3,4],[3,7],[4,1],[4,4],[4,7],[5,2],[5,3],[5,5],[5,6]],
    c: [[5,7],[4,7],[3,7],[2,7],[1,7],[1,6],[1,5],[1,4],[1,3],[1,2],[1,1],[2,1],[3,1],[4,1],[5,1]],
    d: [[1,1],[1,2],[1,3],[1,4],[1,5],[1,6],[1,7],[2,1],[2,7],[3,1],[3,7],[4,1],[4,7],[5,2],[5,3],[5,4],[5,5],[5,6]],
    e: [[1,1],[1,2],[1,3],[1,4],[1,5],[1,6],[1,7],[2,1],[2,4],[2,7],[3,1],[3,4],[3,7],[4,1],[4,4],[4,7],[5,1],[5,7]],
    f: [[1,1],[1,2],[1,3],[1,4],[1,5],[1,6],[1,7],[2,4],[2,7],[3,4],[3,7],[4,4],[4,7],[5,7]],
    g: [[1,1],[1,2],[1,3],[1,4],[1,5],[1,6],[1,7],[2,1],[2,7],[3,1],[3,4],[3,7],[4,1],[4,4],[4,7],[5,1],[5,2],[5,3],[5,4],[5,7]],
    h: [[1,7],[1,6],[1,5],[1,4],[1,3],[1,2],[1,1],[2,4],[3,4],[4,4],[5,7],[5,6],[5,5],[5,4],[5,3],[5,2],[5,1]],
    i: [[1,1],[1,7],[2,1],[2,7],[3,1],[3,2],[3,3],[3,4],[3,5],[3,6],[3,7],[4,1],[4,7],[5,1],[5,7]],
    j: [[1,1],[1,7],[2,1],[2,7],[3,1],[3,2],[3,3],[3,4],[3,5],[3,6],[3,7],[4,7],[5,7]],
    k: [[1,1],[1,2],[1,3],[1,4],[1,5],[1,6],[1,7],[2,4],[3,3],[3,5],[4,2],[4,6],[5,1],[5,7]],
    l: [[1,1],[1,2],[1,3],[1,4],[1,5],[1,6],[1,7],[2,1],[3,1],[4,1],[5,1]],
    m: [[1,1],[1,2],[1,3],[1,4],[1,5],[1,6],[1,7],[2,6],[3,4],[3,5],[4,6],[5,1],[5,2],[5,3],[5,4],[5,5],[5,6],[5,7]],
    n: [[1,1],[1,2],[1,3],[1,4],[1,5],[1,6],[1,7],[2,6],[3,4],[3,5],[4,2],[4,3],[5,1],[5,2],[5,3],[5,4],[5,5],[5,6],[5,7]],
    o: [[1,1],[1,2],[1,3],[1,4],[1,5],[1,6],[1,7],[2,1],[2,7],[3,1],[3,7],[4,1],[4,7],[5,1],[5,2],[5,3],[5,4],[5,5],[5,6],[5,7]],
    p: [[1,1],[1,2],[1,3],[1,4],[1,5],[1,6],[1,7],[2,4],[2,7],[3,4],[3,7],[4,4],[4,7],[5,4],[5,5],[5,6],[5,7]],
    q: [],
    r: [[1,7],[2,7],[3,7],[4,7],[1,6],[5,6],[1,5],[5,5],[1,4],[2,4],[3,4],[4,4],[1,3],[3,3],[1,2],[4,2],[1,1],[5,1]],
    s: [[1,1],[1,4],[1,5],[1,6],[1,7],[2,1],[2,4],[2,7],[3,1],[3,4],[3,7],[4,1],[4,4],[4,7],[5,1],[5,2],[5,3],[5,4],[5,7]],
    t: [[1,7],[2,7],[3,1],[3,2],[3,3],[3,4],[3,5],[3,6],[3,7],[4,7],[5,7]],
    u: [[1,1],[1,2],[1,3],[1,4],[1,5],[1,6],[1,7],[2,1],[3,1],[4,1],[5,1],[5,2],[5,3],[5,4],[5,5],[5,6],[5,7]],
    v: [[1,3],[1,4],[1,5],[1,6],[1,7],[2,2],[3,1],[4,2],[5,3],[5,4],[5,5],[5,6],[5,7]],
    w: [[1,1],[1,2],[1,3],[1,4],[1,5],[1,6],[1,7],[2,2],[3,3],[3,4],[4,2],[5,1],[5,2],[5,3],[5,4],[5,5],[5,6],[5,7]],
    x: [[1,3],[1,4],[1,5],[1,6],[1,7],[2,2],[3,1],[4,2],[5,3],[5,4],[5,5],[5,6],[5,7]],
    y: [[1,1],[1,4],[1,5],[1,6],[1,7],[2,1],[2,4],[3,1],[3,4],[4,1],[4,4],[5,1],[5,2],[5,3],[5,4],[5,5],[5,6],[5,7]],
    z: [[1,1],[1,2],[1,7],[2,1],[2,3],[2,7],[3,1],[3,4],[3,7],[4,1],[4,5],[4,7],[5,1],[5,6],[5,7]]
}

export const getPoints = (text: string) => {
    let pointArray: [number, number][] = [];
    let xPos = 0;

    text.split('').forEach(letter => {
        if (letter === ' ') {
            xPos += 5;
            return;
        }

        let arr = points[letter];
        let maxX = xPos;

        //adjust positions based on xPos
        let adjustedArr = arr.map(value => {
            let [x, y] = value;
            x += xPos;
            if (x > maxX) maxX = x;
            return [x, y] as [number, number];
        });

        //add spacing between letters
        xPos = maxX + 2;

        pointArray.push(...adjustedArr);
    });

    return pointArray;
}